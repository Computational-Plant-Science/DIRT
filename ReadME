------------------------------------------------------------
DIRT 1.0 - An automatic highthroughput root phenotyping platform
(c) 2014 Alexander Bucksch - bucksch@gatech.edu
Web application by Abhiram Das - adas30@biology.gatech.edu

http://www.dirt.biology.gatech.edu

Georgia Institute of Technology
------------------------------------------------------------

The software is written and tested in:
- python 2.7 (https://www.python.org)

The software depends on:
- the graphtools package (http://graph-tool.skewed.de) 
- the mahotas package (http://luispedro.org/software/mahotas)
- the numpy package (http://sourceforge.net/projects/numpy/)
- the scipy package (http://www.scipy.org/SciPy)

Optionally binaries of standard OCR and BarCode software can be used for tag recognition:

- tesseract (https://code.google.com/p/tesseract-ocr/)
paths have to be adjusted in /DIRTocr/pytesser.py (line 12-14)

- zbar (http://zbar.sourceforge.net) 
path has to be adjusted in /DIRTocr/__init__.py (line 28)

Usage:

<run file path> full path to the root image
<unique id> ID which will be a folder name in the working directory. Integer value needed.
<mask threshold> multiplier for the automatically determined mask threshold. 1.0 works fine and is default. For example, if a flashlight is used to take root images, then 0.6 is a good choice.
<excised roots> number of roots placed at the right of the root crown, 0 - excised root analysis is off
<crown root> 1 - crown root analysis is on, 0 - crown root analysis is off
<segmentation> 1 -  is on, 0 - is off
<marker diameter> a simple decimal e.g. 25.4. If 0.0 is used, then the output will have pixels as unit.
<tip diameter filter> not active anymore, but can be used to consider only paths to tips of a certain size. We suggest to use 0
<working directory> full path to folder were the result is stored

Example: 
python main.py /Users/image_folder/image_name.jpg 8 25.0 1 1 1 25.1 0 /Users/output_folder/

Input is restricted to .jpg, .png and .tif images
------------------------------------------------------------

For convenience we provide the runOnFolder script, that executes DIRT on all images in a specified folder. Note we made the masking threshhold availbale on the command line because of user requests.

Example: python runOnFolder.py /Users/image_folder/ <masking threshold>

Please adjust line 86 according to the description above and note that the script uses 6 cores to compute images in parallel. The number of cores can be adjusted in line 80.

------------------------------------------------------------
