{
  "name": "Dirt",
  "tagline": "The source code of the publication :Image-based high-throughput field phenotyping of crop roots\"",
  "body": "# DIRT 1.1 - An automatic high throughput root phenotyping platform  \r\n(c) 2014 Alexander Bucksch - bucksch@gatech.edu, Georgia Institute of Technology  \r\n(c) 2016 Alexander Bucksch - bucksch@uga.edu, University of Georgia, Athens  \r\nWeb application by Abhiram Das - adas30@biology.gatech.edu\r\n\r\n\r\nWeb application: <http://dirt.iplantcollaborative.org>\r\n\r\n\r\nUser and developer group: <https://groups.google.com/forum/#!forum/dirt-users>\r\n\r\n## Dependencies\r\nThe software is written and tested in:\r\n- python 2.7 <https://www.python.org>\r\n\r\n###Required packages:\r\n- the graphtools package <http://graph-tool.skewed.de>\r\n- the mahotas package <http://luispedro.org/software/mahotas>\r\n- the numpy package <http://sourceforge.net/projects/numpy/>\r\n- the scipy package <http://www.scipy.org/SciPy>\r\n\r\n###Optional packages:\r\nOptionally binaries of standard OCR and BarCode software can be used for tag recognition:  \r\n- tesseract <https://code.google.com/p/tesseract-ocr/>  \r\npaths have to be adjusted in /DIRTocr/pytesser.py (line 12-14)\r\n\r\n- zbar <http://zbar.sourceforge.net>   \r\npath has to be adjusted in /DIRTocr/__init__.py (line 28)\r\n\r\n##Command line usage\r\n- <run file path> full path to the root image  \r\n- <unique id> ID which will be a folder name in the working directory. Integer value needed.  \r\n- <mask threshold> multiplier for the automatically determined mask threshold. 1.0 works fine and is default. For example, if a flashlight is used to take root images, then 0.6 is a good choice.  \r\n- <excised roots> number of roots placed at the right of the root crown, 0 - excised root analysis is off  \r\n- <crown root> 1 - crown root analysis is on, 0 - crown root analysis is off  \r\n- <segmentation> 1 -  is on, 0 - is off. Off refers to a pre-existing segmention done with DIRT. Binary masks as input images are detected automatically.  \r\n- <marker diameter> a simple decimal e.g. 25.4. If 0.0 is used, then the output will have pixels as unit.  \r\n- <stem reconstruction> 1 - reconstruction is turned on, 0 - reconstruction is turned off  \r\n- <plots> 1 - plotting data is stored, 0 - plotting data is not stored  \r\n- <output format> 1 - the full trait set is put into one excel file containing empty cells for traits that were not computed, 0 - only computed files are written to the output file  \r\n- <working directory> full path to folder were the result is stored  \r\n- <trait file path> full path to .csv file containing the traits to be computed'  \r\n\r\n####Example: \r\n    python main.py /Documents/image_name.jpg 8 25.0 1 1 1 25.1 0 0 0 /Documents/image_folder/ /Documents/traits.csv\r\n\r\nNotes on common questions:\r\n- Input is restricted to .jpg, .png and .tif images  \r\n- It is not possible to analyze only an excised root when a root crown is in the image. However, it is possible to analyze compute images containing only excised roots.  \r\n\r\n#### Running DIRT on folder content\r\nFor convenience we provide the runOnFolder script, that executes DIRT on all images in a specified folder. \r\nNote we made the masking threshold available on the command line because of user requests.\r\n\r\n####Example: \r\n    python runOnFolder.py /Users/image_folder/ <masking threshold>\r\n\r\nPlease adjust line 86 according to the description above and note that the script uses 6 cores to compute images in parallel. The number of cores can be adjusted in line 80.\r\n\r\n\r\n##Updates in DIRT 1.1 (11 January 2016):\r\n\r\n- Minor bug fixes in Preprocessing.py to allow smaller circle markers and fix a possible missdetection of the experiment tag as the circle.  \r\nThanks to Linda Zamariola (U Bologna) for finding this issue.  \r\n\r\n##Updates in DIRT 1.1 (4 November 2015):\r\n\r\n- Minor bug fixes in the excised root calculations. Thanks to Alexandre Grondin (U Nebraska) for discovering and validating the fixes.  \r\n\r\n##Changes in DIRT 1.1 (14 January 2015):\r\n\r\n- storage of trait values is changed from a list data structure to a dictionary to allow trait selection controlled by the file traits.csv  \r\n- added support for trait selection to reduce computation time. See example file traits.csv (1 - trait is computed, 0 - trait is not computed)  \r\n- removed unused tip-diameter switch on the command line  \r\n- add stem reconstruction switch on the command line to turn the experimental stem reconstruction on/off  \r\n- output file now uses the codes in the trait.csv file and only contains selected traits  \r\n- removed several unused variables and minor bugs fixed  \r\n- added command line option to turn storage of numpy arrays on/off. These files can be used to plot the individual root statistics and can be found in the \"Plots\" folders.  \r\n- new (experimental, not validated) traits added due to community requests: projected root area, width and depth of the skeleton (medial axis), top and bottom angle for monocots, segmentation of adventious and basal roots for legumes to retrieve taproot and hypocotyl diameter and adventious and basal root counts.  \r\n- added computational statistics such as computation time and graph size to help balancing grid installations  \r\n- added an option to have an output file with all possible traits that contains empty cells for not computed traits in the output.csv file. This was a developer request to enable faster ingestion into data bases  \r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}